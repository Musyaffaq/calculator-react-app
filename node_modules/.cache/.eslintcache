[{"/Users/musyaffaq/Documents/Coding Stuff/Calculator App/calculator-web-app/src/index.js":"1","/Users/musyaffaq/Documents/Coding Stuff/Calculator App/calculator-web-app/src/App.js":"2"},{"size":254,"mtime":1653140493615,"results":"3","hashOfConfig":"4"},{"size":1642,"mtime":1653146865648,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vnfu1l",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/musyaffaq/Documents/Coding Stuff/Calculator App/calculator-web-app/src/index.js",[],[],"/Users/musyaffaq/Documents/Coding Stuff/Calculator App/calculator-web-app/src/App.js",["13","14"],[],"import { useState } from 'react';\n\nfunction App() {\n\tconst [calc, setCalc] = useState(\"\");\n\tconst [result, setResult] = useState(\"\");\n\n\tconst ops = ['/', '*', '+', '-', '.'];\n\n\tconst updateCalc = value => {\n\t\tif (\n\t\t\t(ops.includes(value) && calc === '') || \n\t\t\t(ops.includes(value) && ops.includes(calc.slice(-1)))\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\tsetCalc(calc + value);\n\n\t\tif (!ops.includes(value)) {\n\t\t\tsetResult(eval(calc + value).toString());\n\t\t}\n\t}\n\n\tconst createDigits = () => {\n\t\tconst digits = [];\n\n\t\tfor (let i = 1; i < 10; i++) {\n\t\t\tdigits.push(\n\t\t\t\t<button  onClick={() => updateCalc(i.toString())}key={i}>\n\t\t\t\t\t{i}\n\t\t\t\t</button>\n\t\t\t)\n\t\t}\n\t\t\n\t\treturn digits;\n\t}\n\n\tconst calculate = () => {\n\t\tsetCalc(eval(calc).toString())\n\t}\n\n\tconst deleteLast = () => {\n\t\tif (calc === '') {\n\t\t\treturn;\n\t\t}\n\t\tconst value = calc.slice(0, -1);\n\n\t\tsetCalc(value);\n\t\tsetResult(value)\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"calculator\">\n\t\t\t\t<div className=\"display\">\n\t\t\t\t\t{result ? <span>({result}) </span> : ''}\n\t\t\t\t\t{ calc || \"0\"}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className=\"operators\">\n\t\t\t\t\t<button onClick={() => updateCalc('/')}>/</button>\n\t\t\t\t\t<button onClick={() => updateCalc('*')}>*</button>\n\t\t\t\t\t<button onClick={() => updateCalc('+')}>+</button>\n\t\t\t\t\t<button onClick={() => updateCalc('-')}>-</button>\n\n\t\t\t\t\t<button onClick={deleteLast}>DEL</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"digits\">\n\t\t\t\t\t{ createDigits() }\n\t\t\t\t\t<button onClick={() => updateCalc('0')}>0</button>\n\t\t\t\t\t<button onClick={() => updateCalc('.')}>.</button>\n\t\t\t\t\t\n\t\t\t\t\t<button onClick={calculate}>=</button>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t);\n\t}\n\nexport default App;\n",{"ruleId":"15","severity":1,"message":"16","line":21,"column":14,"nodeType":"17","messageId":"18","endLine":21,"endColumn":18},{"ruleId":"15","severity":1,"message":"16","line":40,"column":11,"nodeType":"17","messageId":"18","endLine":40,"endColumn":15},"no-eval","eval can be harmful.","CallExpression","unexpected"]